@{
    ViewData["Title"] = "Home Page";
}
@using MicroVerse.ViewModels
@model HomeViewModel

@{
    
    
        var followsList = new List<UserModel>();
        var postsList = new List<PostViewModel>();
        Random r = new Random();
        UserModel f;
        PostViewModel p;
        for(int i=0; i<5; i++)
        {
            f = new UserModel();
            f.DisplayedName = "Followed User " + i;
            followsList.Add(f);
            p = new PostViewModel("This is a Post from User " + i, f, null, DateTime.Now, "Followed User " + i, "user@email.com", (int)r.Next(0,100), (int)r.Next(0,50));
            postsList.Add(p);
        }
        var mockModel = new HomeViewModel(new UserModel(), followsList, postsList);
    
}


<!-- Side Follow-List-->
<div class="sidenav">
    @foreach (var follow in mockModel.Follows)
    {

        <a href="#"><img class="profile-picture" src="https://picsum.photos/200/200" height="35" width="35" /> @follow.DisplayedName</a>
    }
</div>

<!-- Page content -->
<div class="main">
    @foreach (var post in mockModel.Posts)
    {
        <div class="post-containter">
            <div class="post-header">

                <a class="post-author" href="#">
                    <img class="profile-picture" src="https://picsum.photos/200/200" height="25" width="25" />
                    @post.DisplayedName
                </a>
                <div class="post-actions">
                    <i class="fa-solid fa-circle-up"></i> @post.Upvotes
                    <i class="fa-solid fa-circle-down"></i> @post.Downvotes
                    <a href="#"><i class="fa-solid fa-flag"></i></a>
                </div>
            </div>
            <hr></hr>
            <div class="post-body">
                @post.Body
            </div>
        </div>
    }
</div>