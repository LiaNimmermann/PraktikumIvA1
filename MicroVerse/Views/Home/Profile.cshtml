@{
    ViewData["Title"] = "Profile";
}
@using MicroVerse.ViewModels
@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> SignInManager
@model ProfileViewModel

@{
    string roleSelectionModel = Model.UserName + "," + @Model.Role;
}


<!-- PORFILE PAGE; VISIBLE TO LOGGED IN USERS ONLY; PARTIALLY EDITABLE IF LOGGED IN USERS PROFILE -->


<!-- Page content -->
<div class="main">

    <!-- Profile information -->
    <div class="profile-header">
        <div class="profile-header-row">
            <img class="profile-picture" src="@Model.PictureUrl" height="100" width="100" /> 
        </div>


        <!-- Picture URL Input if profile of logged in user-->
        @if (SignInManager.IsSignedIn(User) && Model.UserName == @User.Identity?.Name)
        {
            <div class="profile-header-row">
                <form method="post" action="/api/User/picture/@Model.UserName">
                    <input placeholder="Picture URL" value="" type="text" id="imgURL" name="imgURL">
                    <button type="submit">Save</button>
                </form>
            </div>
        }
        <div class="profile-header-row">
            <h2>@@@Model.UserName</h2>
        </div>
        <div class="profile-header-row">
            <!-- Display Name, editable for logged in users profile -->
            @if (SignInManager.IsSignedIn(User) && Model.UserName == @User.Identity?.Name)
            {
                <form method="post" action="/api/User/DisplayName/@Model.UserName">
                    <input value="@Model.DisplayedName" type="text" id="displayName" name="displayName">
                    <button type="submit">Save</button>
                </form>
            }
            else
            {
                <h1>@Model.DisplayedName</h1>
            }
        </div>
        <!-- Follow information -->
        <div class="profile-header-row">
            <div class="follow-section">
                <div class="follow-counts">
                    <p>Followers: @Model.FollowerCount</p>
                    <p>Following: @Model.FollowsCount</p>
                </div>
                <partial name="_FollowBtn" for="@Model.Follows">
            </div>
        </div>

        <!-- Profile bio, editable for logged in users profile -->
        <div class="profile-header-row">
            <div class="profile-bio">
                @if (SignInManager.IsSignedIn(User) && Model.UserName == @User.Identity?.Name)
                {
                    <form method="post" action="/api/User/Bio/@Model.UserName">
                        <input value="@Model.Bio" type="text" id="bio" name="bio">
                        <button type="submit">Save</button>
                    </form>
                } else
                {
                    <p class="bio">@Model.Bio</p>
                }
            </div>
        </div>

        <!-- Role Information -->
        <div class="profile-header-row">
            <p class="role-info">Current role: @Model.Role</p>
        </div>
        <!-- Role selection for admins -->
        <div class="profile-header-row">
            <partial name="_RoleSelection" for="@roleSelectionModel">
        </div>
    </div>


    <!-- Post section -->
    <div class="posts">

        <!-- Create post box for logged in users profile -->
         @if (SignInManager.IsSignedIn(User) && Model.UserName == @User.Identity?.Name)
        {
            <div>
                <partial name="_CreatePostPartial">
            </div>
        }
        <!-- Post feed-->
        <partial name="_PostFeed" for="@Model.Posts">
    </div>
</div>
